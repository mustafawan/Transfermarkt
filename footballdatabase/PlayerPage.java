package footballdatabase;

import java.awt.Cursor;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Pc
 */
public class PlayerPage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
    public PlayerPage() {
        initComponents();
    }
    private void openStartPage() {
        StartPage Start = new StartPage();
        Start.setVisible(true);
    }
    private void openImportScreenPlayer() {
        ImportScreenPlayer InsertPlayer = new ImportScreenPlayer();
        InsertPlayer.setVisible(true);
    }
    private void openUpdateScreenPlayer(){
        UpdateScreenPlayer UpdatePlayer = new UpdateScreenPlayer();
        UpdatePlayer.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        footballDatabase1 = new footballdatabase.FootballDatabase();
        footballDatabase2 = new footballdatabase.FootballDatabase();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Player Management Page");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(400, 0));
        setPreferredSize(new java.awt.Dimension(700, 800));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setBackground(new java.awt.Color(102, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("List");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Insert");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 0, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Order by Name");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(102, 0, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Order by Position");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(102, 0, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Update");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(102, 0, 0));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Search");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(102, 0, 0));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Delete");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(102, 0, 0));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PlayerID", "PlayerName", "TeamID", "Position", "Nationality", "PlayerValue", "Goal", "Assist", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(20);
        }

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Exit3.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2))))
                .addContainerGap(132, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try {
    // JDBC sürücüsünü yükleme
    Class.forName("com.mysql.cj.jdbc.Driver");

    // Veritabanı bağlantısını oluşturma
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/transfermarkt", "root", "admin123");
    Statement st = con.createStatement();

    // SQL sorgusu hazırlama
    String sql = "SELECT Player.PlayerID, Player.TeamID, Player.PlayerName, Player.Position, Player.Nation, " +
                 "IFNULL(PlayerStats.PValue, '-') AS PValue, " +
                 "IFNULL(PlayerStats.Goal, 0) AS Goal, " +
                 "IFNULL(PlayerStats.Assist, 0) AS Assist, " +
                 "IFNULL(PlayerStats.Injury, 'None') AS Injury " +
                 "FROM Player LEFT JOIN PlayerStats ON Player.PlayerID = PlayerStats.PlayerID " +
                 "ORDER BY Player.PlayerID";
    ResultSet rs = st.executeQuery(sql);

    // jTable1 modelini al ve sıfırla
    DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
    tblModel.setRowCount(0);

    // Sonuç kümesini işleyin ve tabloya satır ekleyin
    while (rs.next()) {
        String PlayerID = rs.getString("PlayerID");
        String TeamID = rs.getString("TeamID");
        String PlayerName = rs.getString("PlayerName");
        String Position = rs.getString("Position");
        String Nation = rs.getString("Nation");
        String PValue = rs.getString("PValue");
        
        // Gol ve asist değerlerini kontrol et
        int Goal = rs.getInt("Goal");
        int Assist = rs.getInt("Assist");
        String GoalStr = (Goal == 0) ? "-" : String.valueOf(Goal);
        String AssistStr = (Assist == 0) ? "-" : String.valueOf(Assist);

        String Injury = rs.getString("Injury");

        // Injury durumunu kontrol et
        String Availability = Injury.equals("None") ? "Available" : Injury;

        String[] database = { PlayerID, PlayerName, TeamID, Position, Nation, PValue, GoalStr, AssistStr, Availability };
        tblModel.addRow(database);
    }

    // Veritabanı bağlantısını kapat
    con.close();
} catch (Exception e) {
    e.printStackTrace();  // Daha iyi hata ayıklama için
    System.out.println("hata");
}



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
try {
    // JDBC sürücüsünü yükleme
    Class.forName("com.mysql.cj.jdbc.Driver");

    // Veritabanı bağlantısını oluşturma
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/transfermarkt", "root", "admin123");
    Statement st = con.createStatement();

    // SQL sorgusu hazırlama
    String sql = "SELECT Player.PlayerID, Player.TeamID, Player.PlayerName, Player.Position, Player.Nation, " +
                 "IFNULL(PlayerStats.PValue, '-') AS PValue, " +
                 "IFNULL(PlayerStats.Goal, 0) AS Goal, " +
                 "IFNULL(PlayerStats.Assist, 0) AS Assist, " +
                 "IFNULL(PlayerStats.Injury, 'None') AS Injury " +
                 "FROM Player LEFT JOIN PlayerStats ON Player.PlayerID = PlayerStats.PlayerID " +
                 "ORDER BY Player.Position";
    ResultSet rs = st.executeQuery(sql);

    // jTable1 modelini al ve sıfırla
    DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
    tblModel.setRowCount(0);

    // Sonuç kümesini işleyin ve tabloya satır ekleyin
    while (rs.next()) {
        String PlayerID = rs.getString("PlayerID");
        String TeamID = rs.getString("TeamID");
        String PlayerName = rs.getString("PlayerName");
        String Position = rs.getString("Position");
        String Nation = rs.getString("Nation");
        String PValue = rs.getString("PValue");
        
        // Gol ve asist değerlerini kontrol et
        int Goal = rs.getInt("Goal");
        int Assist = rs.getInt("Assist");
        String GoalStr = (Goal == 0) ? "-" : String.valueOf(Goal);
        String AssistStr = (Assist == 0) ? "-" : String.valueOf(Assist);

        String Injury = rs.getString("Injury");

        // Injury durumunu kontrol et ve "None" ise "Available" olarak ayarla
        String Availability = Injury.equals("None") ? "Available" : Injury;

        String[] database = { PlayerID, PlayerName, TeamID, Position, Nation, PValue, GoalStr, AssistStr, Availability };
        tblModel.addRow(database);
    }

    // Veritabanı bağlantısını kapat
    con.close();
} catch (Exception e) {
    e.printStackTrace();  // Daha iyi hata ayıklama için
    System.out.println("hata");
}

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
try {
    // JDBC sürücüsünü yükleme
    Class.forName("com.mysql.cj.jdbc.Driver");

    // Veritabanı bağlantısını oluşturma
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/transfermarkt", "root", "admin123");
    Statement st = con.createStatement();

    // SQL sorgusu hazırlama
    String sql = "SELECT Player.PlayerID, Player.TeamID, Player.PlayerName, Player.Position, Player.Nation, " +
                 "IFNULL(PlayerStats.PValue, '-') AS PValue, " +
                 "IFNULL(PlayerStats.Goal, 0) AS Goal, " +
                 "IFNULL(PlayerStats.Assist, 0) AS Assist, " +
                 "IFNULL(PlayerStats.Injury, 'None') AS Injury " +
                 "FROM Player LEFT JOIN PlayerStats ON Player.PlayerID = PlayerStats.PlayerID " +
                 "ORDER BY Player.PlayerName";
    ResultSet rs = st.executeQuery(sql);

    // jTable1 modelini al ve sıfırla
    DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
    tblModel.setRowCount(0);

    // Sonuç kümesini işleyin ve tabloya satır ekleyin
    while (rs.next()) {
        String PlayerID = rs.getString("PlayerID");
        String TeamID = rs.getString("TeamID");
        String PlayerName = rs.getString("PlayerName");
        String Position = rs.getString("Position");
        String Nation = rs.getString("Nation");
        String PValue = rs.getString("PValue");

        // Gol ve asist değerlerini kontrol et
        int Goal = rs.getInt("Goal");
        int Assist = rs.getInt("Assist");
        String GoalStr = (Goal == 0) ? "-" : String.valueOf(Goal);
        String AssistStr = (Assist == 0) ? "-" : String.valueOf(Assist);

        String Injury = rs.getString("Injury");

        // Injury durumunu kontrol et ve "None" ise "Available" olarak ayarla
        String Availability = Injury.equals("None") ? "Available" : Injury;

        String[] database = { PlayerID, PlayerName, TeamID, Position, Nation, PValue, GoalStr, AssistStr, Availability };
        tblModel.addRow(database);
    }

    // Veritabanı bağlantısını kapat
    con.close();
} catch (Exception e) {
    e.printStackTrace();  // Daha iyi hata ayıklama için
    System.out.println("hata");
}

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.dispose();
        openStartPage();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jLabel1MouseExited

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    String playerID = jTextField2.getText();  // Kullanıcının girdiği PlayerID'yi al

    // Eğer PlayerID boşsa, kullanıcıyı uyar
    if (playerID.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a PlayerID", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // JDBC sürücüsünü yükleme
        Class.forName("com.mysql.cj.jdbc.Driver");

        // Veritabanı bağlantısını oluşturma
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/transfermarkt", "root", "admin123");
             Statement st = con.createStatement()) {
             
            // Silme işlemi için onay al
            int r = JOptionPane.showConfirmDialog(this, "Are you sure to delete this player?");

            if (r == JOptionPane.YES_OPTION) {
                // PlayerStats tablosundan ilgili kayıtları sil
                String sqlPlayerStats = "DELETE FROM PlayerStats WHERE PlayerID = " + playerID;
                st.executeUpdate(sqlPlayerStats);

                // Player tablosundan kaydı sil
                String sqlPlayer = "DELETE FROM Player WHERE PlayerID = " + playerID;
                int rowsAffected = st.executeUpdate(sqlPlayer);

                // İşlem sonucunu kullanıcıya bildir
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Deleted!!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "PlayerID not found", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();  // Daha iyi hata ayıklama için
        JOptionPane.showMessageDialog(this, "An error occurred while deleting the player: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }


    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
            String playerName = jTextField1.getText().trim();  // Kullanıcının girdiği ismi al ve ön/arkadaki boşlukları kaldır

    // Eğer isim boşsa, kullanıcıyı uyar
    if (playerName.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a player name", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // JDBC sürücüsünü yükleme
        Class.forName("com.mysql.cj.jdbc.Driver");

        // Veritabanı bağlantısını oluşturma
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/transfermarkt", "root", "admin123");
        Statement st = con.createStatement();

        // SQL sorgusu hazırlama
        String sql = "SELECT Player.PlayerID, Player.TeamID, Player.PlayerName, Player.Position, Player.Nation, " +
                     "IFNULL(PlayerStats.PValue, '-') AS PValue, " +
                     "IFNULL(PlayerStats.Goal, 0) AS Goal, " +
                     "IFNULL(PlayerStats.Assist, 0) AS Assist, " +
                     "IFNULL(PlayerStats.Injury, '-') AS Status " +
                     "FROM Player LEFT JOIN PlayerStats ON Player.PlayerID = PlayerStats.PlayerID " +
                     "WHERE Player.PlayerName LIKE '%" + playerName + "%' " +
                     "ORDER BY Player.PlayerID";
        ResultSet rs = st.executeQuery(sql);

        // jTable1 modelini al ve sıfırla
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        tblModel.setRowCount(0);

        // Sonuç kümesini işleyin ve tabloya satır ekleyin
         while (rs.next()) {
            String PlayerID = rs.getString("PlayerID");
            String TeamID = rs.getString("TeamID");
            String PlayerName = rs.getString("PlayerName");
            String Position = rs.getString("Position");
            String Nation = rs.getString("Nation");
            String PValue = rs.getString("PValue");
            int Goal = rs.getInt("Goal");
            int Assist = rs.getInt("Assist");
            String GoalStr = (Goal == 0) ? "-" : String.valueOf(Goal);
            String AssistStr = (Assist == 0) ? "-" : String.valueOf(Assist);
            String Injury = rs.getString("Status");

            String[] database = { PlayerID, PlayerName, TeamID, Position, Nation, PValue, GoalStr, AssistStr, Injury };
            tblModel.addRow(database);
        }

        // Veritabanı bağlantısını kapat
        con.close();
    } catch (Exception e) {
        e.printStackTrace();  // Daha iyi hata ayıklama için
        JOptionPane.showMessageDialog(this, "An error occurred while searching for the player: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       this.dispose();
       openUpdateScreenPlayer();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        this.dispose();
        openImportScreenPlayer();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private footballdatabase.FootballDatabase footballDatabase1;
    private footballdatabase.FootballDatabase footballDatabase2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
